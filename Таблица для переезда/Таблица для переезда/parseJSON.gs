function parseJSON(obj){

    obj.internship ? obj : obj.internship = {
                                              "plannedDate": "",
                                              "status": "",
                                              "darkstoreTitle": "", 
                                              "role": ""
                                            };

    return [
            `${obj.name.lastName} ${obj.name.firstName} ${obj.name.middleName}`.replace("undefined", ""),// –§–ò–û —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º undefined –ø–æ–¥—Å—Ç—Ä–æ–∫,
            obj.mobile,
            findMasks(obj.staffPartner),
            parseDateDate(obj.internship.plannedDate),
            parseDateTime(obj.internship.plannedDate),
            statusCodes[obj.internship.status],
            obj.internship.darkstoreTitle,
            role[obj.internship.role],
            transport[obj.vehicle.type],
            obj.internship.status == "rejected" ? rejectionReasonsCodes[obj.internship.rejectionReason] : obj.internship.status == "failed" ? failureReasonsCodes[obj.internship.failureReason] : "",
            obj.darkstoreCity,
            obj.darkstoreTitle,            
            parseDateDate(obj.profileCreatedAt),
            parseDateDate(obj.stateModifiedAt)
          ] 

}

//üü© –†–∞–±–æ—Ç–∞–µ—Çüü• –ü–µ—Ä–µ—Å—Ç–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å

function parseJSONEmployee(obj){

    return [
              `${obj.name.lastName} ${obj.name.firstName} ${obj.name.middleName}`.replace("undefined", ""), // –§–ò–û —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º undefined –ø–æ–¥—Å—Ç—Ä–æ–∫
              obj.darkstoreTitle, // –¶–§–ó 
              obj.darkstoreCity, // –ì–æ—Ä–æ–¥
              findMasks(obj.staffPartner), // –ê—É—Ç—Å–æ—Ä—Å–µ—Ä
              obj.profileCreatedAt, // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –£–ó
              obj.internship ? "–î–∞": "–ù–µ—Ç", // –ù–∞–ª–∏—á–∏–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
              obj.mobile, // –¢–µ–ª–µ—Ñ–æ–Ω
              obj.state == "working" ? "üü© –†–∞–±–æ—Ç–∞–µ—Ç" : "", // –°—Ç–∞—Ç—É—Å –†–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –ø–æ–ª–µ state == working, –¥–ª—è —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –ø–æ–ª–µ state –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å "new", —Ç–æ–≥–¥–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø—É—Å—Ç—ã–º
              obj.vehicle ? transport[obj.vehicle.type] : "", // –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç
              "",
              "",
              obj.stateModifiedAt // –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
            ];
}

function parseJSONNotEmployee(obj){

    return [
              `${obj.name.lastName} ${obj.name.firstName} ${obj.name.middleName}`.replace("undefined", ""),// –§–ò–û —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º undefined –ø–æ–¥—Å—Ç—Ä–æ–∫,
              obj.darkstoreTitle, // –¶–§–ó
              obj.darkstoreCity, // –ì–æ—Ä–æ–¥
              findMasks(obj.staffPartner), // –ê—É—Ç—Å–æ—Ä—Å–µ—Ä
              obj.stateModifiedAt, // –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
              obj.mobile, // –¢–µ–ª–µ—Ñ–æ–Ω
              "üü• –ü–µ—Ä–µ—Å—Ç–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å", // –°—Ç–∞—Ç—É—Å
              obj.vehicle ? transport[obj.vehicle.type] : "", // –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç
              "",
              "",
              obj.profileCreatedAt, // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –£–ó
              obj.inactivityReason ? fireReason[obj.inactivityReason] : "", // –ü—Ä–∏—á–∏–Ω–∞ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è
              obj.internship ? "–î–∞": "–ù–µ—Ç" // –ù–∞–ª–∏—á–∏–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
            ]; 
}

function parseDateDate(date){

  if(date)
  {
    date = new Date(date);
  }
  else
  {
    return ""
  }

  date = new Date(date);
  return date.getDate() + "." + (date.getMonth()+1) + "." + date.getFullYear();
}

function parseDateTime(date){
  
  if(date)
  {
    date = new Date(date);
  }
  else
  {
    return ""
  }

  let minutes = date.getMinutes(); 
  minutes == 0 ? minutes = "00" : minutes;
  return date.getHours() + ":" + minutes;
}





